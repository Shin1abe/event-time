generator client {
  provider = "prisma-client-js"
}



datasource db {
  //--FJWANからはNG
  //-- verceldbのURL変更ができなかったので直接指定
  //provider = "postgresql"
  //url = "postgres://default:TYRiMa07ynBm@ep-muddy-wave-a1541cau-pooler.ap-southeast-1.aws.neon.tech:5432/verceldb?sslmode=require&pgbouncer=true&connect_timeout=30&connection_limit=60"
  //directUrl ="postgres://default:TYRiMa07ynBm@ep-muddy-wave-a1541cau.ap-southeast-1.aws.neon.tech:5432/verceldb?sslmode=require&connect_timeout=30&connection_limit=60"
  //-- directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  //--  url = env("POSTGRES_PRISMA_URL") // uses connection pooling

  //--クライアント環境で処理  
  provider = "sqlite"
  url      = "file:./dev.db"
}

model UserExample {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Event {
  id        Int      @id @default(autoincrement())
  eventId   String   @unique
  eventName String?
  eventUrl  String?
  eventMemo String?
  createdAt DateTime @default(now())
}

model EventDate {
  id        Int      @id @default(autoincrement())
  eventId   String
  eventDate DateTime
  createdAt DateTime @default(now())

  @@unique([eventId, eventDate])
}

model EventUser {
  eventId   String
  userId    Int      @id @default(autoincrement())
  userName  String?
  userMemo  String?
  createdAt DateTime @default(now())

  @@unique([eventId, userId])
}

model EventUserSel {
  id        Int      @id @default(autoincrement())
  eventId   String
  eventDate DateTime
  userId    Int
  userSel   String
  createdAt DateTime @default(now())

  @@unique([eventId, eventDate, userId])
}
